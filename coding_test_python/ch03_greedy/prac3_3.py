# 어떠한 수 N이 1이 될 대까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 한다.
# 단, 두 번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있다.
# 1. N에서 1을 뺀다.
# 2. N을 K로 나눈다.
# N과 K가 주어질 대 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하시오.

# K로 최대한 많이 나눌 수 있도록 하는 것이 최적의 해를 보장하는 것이다.
n, k = map(int, input().split())
count = 0

# K로 나눌 수 있으면 나누고, 나눌 수 없으면 1을 빼는 과정을 N = 1이 될 때까지 반복한다.
while True :
    if n % k == 0:
        n /= k
    else:
        n -= 1

    count += 1
    
    if n == 1:
        break

print(count)

# 다음과 같이 하면 while루프를 도는 횟수를 줄일 수 있다.(교재 예시 답안)
# 한 루프를 돌 때 1번 과정과 2번 과정을 모두 진행한다.
# 1씩 빼는 과정을 N이 K로 나누어 떨어질 때까지 진행하고 k로 나눈다.
result = 0
while True:
    # N이 K로 나누어 떨어질 때까지 뺀다.
    target = (n // k) * k
    result += (n - target)
    n = target

    # N이 K보다 작아 더 이상 K로 나눌 수 없으면 루프를 탈출한다.
    if n < k:
        break
    
    # N을 K로 나누어준다.
    result += 1
    n //= k

# 마지막으로 남은 수가 1이 될 때까지 뺀다.
result += (n - 1)
print(result)